{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import \{ useState \} from 'react';\
import \{ Card, CardContent \} from "@/components/ui/card";\
import \{ Button \} from "@/components/ui/button";\
import \{ Input \} from "@/components/ui/input";\
\
export default function RunSmart() \{\
  const [goal, setGoal] = useState("resistencia");\
  const [weight, setWeight] = useState(70); // Peso en kg\
  const [calories, setCalories] = useState(0);\
\
  const calculateCalories = () => \{\
    let baseCalories = 0;\
    if (goal === "resistencia") baseCalories = weight * 30;\
    if (goal === "marat\'f3n") baseCalories = weight * 35;\
    if (goal === "gana m\'fasculo") baseCalories = weight * 40;\
    setCalories(baseCalories);\
  \};\
\
  const [recipes, setRecipes] = useState([\
    \{ name: "Ensalada de quinoa", calories: 400, type: "resistencia" \},\
    \{ name: "Batido proteico", calories: 250, type: "marat\'f3n" \},\
    \{ name: "Pasta con pollo", calories: 600, type: "gana m\'fasculo" \},\
  ]);\
\
  const filteredRecipes = recipes.filter(recipe => recipe.type === goal);\
\
  return (\
    <div className="p-6 max-w-3xl mx-auto">\
      <h1 className="text-2xl font-bold mb-4">RunSmart - Nutrici\'f3n para Corredores</h1>\
      <p className="mb-4">Selecciona tu objetivo y descubre recetas ideales para tu entrenamiento.</p>\
      \
      <select \
        className="border rounded p-2 mb-4 w-full" \
        value=\{goal\} \
        onChange=\{(e) => setGoal(e.target.value)\}\
      >\
        <option value="resistencia">Resistencia</option>\
        <option value="marat\'f3n">Marat\'f3n</option>\
        <option value="gana m\'fasculo">Ganar M\'fasculo</option>\
      </select>\
      \
      <div className="mb-4">\
        <label className="block font-semibold">Ingresa tu peso (kg):</label>\
        <Input \
          type="number" \
          value=\{weight\} \
          onChange=\{(e) => setWeight(Number(e.target.value))\} \
          className="border rounded p-2 w-full"\
        />\
        <Button className="mt-2 w-full" onClick=\{calculateCalories\}>Calcular Calor\'edas</Button>\
        \{calories > 0 && <p className="mt-2">Requerimiento diario: <strong>\{calories\} kcal</strong></p>\}\
      </div>\
\
      <div className="grid gap-4">\
        \{filteredRecipes.map((recipe, index) => (\
          <Card key=\{index\} className="p-4 border rounded">\
            <CardContent>\
              <h2 className="text-lg font-semibold">\{recipe.name\}</h2>\
              <p className="text-sm">Calor\'edas: \{recipe.calories\}</p>\
            </CardContent>\
          </Card>\
        ))\}\
      </div>\
    </div>\
  );\
\}\
}